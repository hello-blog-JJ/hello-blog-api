<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jj.hello_blog.domain.category.repository.CategoryMapper">

    <resultMap id="CategoryResponseMap" type="CategoryResponse">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="thumbUrl" column="thumbUrl"/>
        <result property="postCount" column="postCount"/>
    </resultMap>

    <insert id="insertCategory" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO category(name, thumb_url, parent_id)
        VALUES (#{name}, #{thumbUrl}, #{parentId})
    </insert>

    <select id="selectCategoryHierarchy" resultType="CategoryHierarchy">
        WITH RECURSIVE CategoryHierarchy AS (SELECT id,
                                                    thumb_url,
                                                    name,
                                                    parent_id
                                             FROM category
                                             WHERE parent_id IS NULL
                                             UNION ALL
                                             SELECT c.id,
                                                    c.thumb_url,
                                                    c.name,
                                                    c.parent_id
                                             FROM category c
                                                      INNER JOIN
                                                  CategoryHierarchy ch ON c.parent_id = ch.id)
        SELECT id        AS id,
               thumb_url AS thumbUrl,
               name      AS name,
               parent_id AS parentId
        FROM CategoryHierarchy
    </select>

    <select id="selectCategoriesWhereParentIdIsNull" resultMap="CategoryResponseMap">
        WITH RECURSIVE CategoryHierarchy AS (
        <!-- 최상위 카테고리 선택 -->
        SELECT id AS category_id,
        id AS top_category_id,
        parent_id
        FROM category
        WHERE parent_id IS NULL

        UNION ALL

        <!-- 하위 카테고리 선택 (재귀)
        category_id는 자기 꺼, top_category_id 자기의 최상위 카테고리 id -->
        SELECT c.id AS category_id,
        ch.top_category_id,
        c.parent_id
        FROM category c
        INNER JOIN
        CategoryHierarchy ch ON c.parent_id = ch.category_id)

        SELECT ch.top_category_id AS id,
        c.thumb_url AS thumbUrl,
        c.name AS name,
        COUNT(p.id) AS postCount
        FROM CategoryHierarchy ch
        <!-- INNER JOIN 전 ch 테이블: cid | tid | pid -->
        INNER JOIN
        category c ON c.id = ch.top_category_id
        <!-- INNER JOIN 후 ch 테이블: cid | tid | pid | ..top_category_id의 컬럼들 -->
        <!-- 부모 자식 조인이 아니라 컬럼 뻥튀기 안 됨 -->

        <!-- LEFT JOIN 전 ch 테이블: cid | tid | pid | ..top_category_id의 컬럼들 -->
        LEFT JOIN
        post p ON p.category_id = ch.category_id
        <!-- LEFT JOIN 후 | ch 테이블: cid | tid | pid | ..top_category_id의 컬럼들 | 각 카테고리에 게시된 글의 컬럼들 -->
        <!-- 카테고리와 게시글은 일대다 관계라 여기서 부터는 컬럼이 늘어남 -->

        <!-- 그룹으로 묶으면 최상위 카테고리에 몇 개의 게시글이 있는지 조회할 수 있음 -->
        GROUP BY ch.top_category_id, c.thumb_url, c.name
        ORDER BY ch.top_category_id;
    </select>

    <select id="selectCategoriesByParentId" resultMap="CategoryResponseMap">
        WITH RECURSIVE CategoryHierarchy AS (SELECT id,
                                                    name,
                                                    thumb_url,
                                                    parent_id
                                             FROM category
                                             WHERE parent_id = #{parentId})
        SELECT ch.id                   AS id,
               ch.name                 AS name,
               ch.thumb_url            AS thumbUrl,
               IFNULL(p.post_count, 0) AS postCount
        FROM CategoryHierarchy ch
                 LEFT JOIN (SELECT category_id,
                                   COUNT(*) AS post_count
                            FROM post
                            GROUP BY category_id) p ON ch.id = p.category_id
    </select>

    <update id="updateCategoryById">
        UPDATE category
        SET thumb_url = #{thumbUrl},
            name      = #{name},
            parent_id = #{parentId}
        WHERE id = #{id}
    </update>

    <delete id="deleteCategoryById">
        DELETE
        FROM category
        WHERE id = #{id};
    </delete>

</mapper>
